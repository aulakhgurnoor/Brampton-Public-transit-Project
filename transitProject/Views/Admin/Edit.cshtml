@model transitProject.Models.Stop

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/adminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Stop</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.stopId)

        <div class="form-group">
            @Html.Label("STOP NAME", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stopName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stopName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("SOURCE", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.source, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.source, new List<SelectListItem>{
               new SelectListItem() {Text="Select" ,Value="" },
       new SelectListItem() {Text="Brampton Terminal" ,Value="Brampton Terminal" },
       new SelectListItem() {Text="Mount Pleasant Go" ,Value="Mount Pleasant Go" },
       new SelectListItem() {Text="Humber College" ,Value="Humber College" },
                    new SelectListItem() {Text="Square One" ,Value="Square One" }
           })
                @Html.ValidationMessageFor(model => model.source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DESTINATION", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.destination, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.destination, new List<SelectListItem>{
               new SelectListItem() {Text="Select" ,Value="" },
       new SelectListItem() {Text="Humber College" ,Value="Humber College" },
                    new SelectListItem() {Text="Square One" ,Value="Square One" },
           new SelectListItem() {Text="Brampton Terminal" ,Value="Brampton Terminal" },
       new SelectListItem() {Text="Mount Pleasant Go" ,Value="Mount Pleasant Go" }
           })
                @Html.ValidationMessageFor(model => model.destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ETA", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.eta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.eta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
